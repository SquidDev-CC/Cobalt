plugins {
	id 'org.cadixdev.licenser' version '0.6.0'
	id "java"
	id "maven-publish"
	id 'org.checkerframework' version '0.5.17'
}

group = 'org.squiddev'
version = '0.5.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}

	withSourcesJar()
}

repositories {
	mavenCentral()
}

configurations {
	deployerJars
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

	testImplementation 'org.openjdk.jmh:jmh-core:1.23'
	testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.23'

	deployerJars "org.apache.maven.wagon:wagon-ssh:3.3.1"
}

license {
	include("*.java")
}

checkerFramework {
	// add '-PskipCheckerFramework' to the gradle command line to speed up the build
	checkers = [
		'org.checkerframework.checker.signedness.SignednessChecker'
	]
	extraJavacArgs = [
		"-AonlyDefs=^org\\.squiddev\\.cobalt\\.lib\\.doubles\\."
	]
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java

			pom {
				name = 'Cobalt'
				description = 'A reentrant fork of LuaJ for Lua 5.1'
				url = 'https://github.com/SquidDev/Cobalt'

				scm {
					url = 'https://github.com/SquidDev/Cobalt.git'
				}

				issueManagement {
					system = 'github'
					url = 'https://github.com/SquidDev/Cobalt/issues'
				}

				licenses {
					license {
						name = 'MIT'
						url = 'https://github.com/SquidDev/Cobalt/blob/master/LICENSE'
					}
				}
			}
		}
	}

	repositories {
		if (project.hasProperty("mavenUser")) {
			maven {
				name = "SquidDev"
				url = "https://squiddev.cc/maven"
				credentials {
					username = project.property("mavenUser") as String
					password = project.property("mavenPass") as String
				}
			}
		}
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint"
	}
}

task executeProfile(type: JavaExec) {
	main = "org.squiddev.cobalt.PerformanceBenchmark"
	classpath = sourceSets.test.runtimeClasspath
}

test {
	useJUnitPlatform()
	testLogging {
		events "skipped", "failed"
	}
}
